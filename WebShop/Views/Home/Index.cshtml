@model IEnumerable<Domain.Entities.HangHoa>
@{
    ViewData["Title"] = "Mini Market - Trang chủ";
    var categories = ViewBag.Categories as List<Domain.Entities.Loai>;
}

<div class="container my-4">
    <div class="row mb-4">
        <div class="col-md-12">
            <h1 class="display-4 text-center mb-4">🛒 Chào mừng đến Mini Market</h1>
            <p class="lead text-center text-muted">Mua sắm trực tuyến dễ dàng, giao hàng nhanh chóng</p>
        </div>
    </div>

    <!-- Filter by Category -->
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">🏷️ Danh mục sản phẩm</h5>
                    <div class="btn-group" role="group">
                        <a href="@Url.Action("Index")" class="btn btn-outline-primary">Tất cả</a>
                        @if (categories != null)
                        {
                            foreach (var category in categories)
                            {
                                <a href="@Url.Action("Index", new { categoryId = category.MaLoai })" 
                                   class="btn btn-outline-primary">@category.TenLoai</a>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Products Grid -->
    <div class="row">
        @if (Model != null && Model.Any())
        {
            foreach (var product in Model)
            {
                var finalPrice = product.DonGia - product.GiamGia;
                var discountPercent = product.DonGia > 0 ? (product.GiamGia / product.DonGia * 100) : 0;
                
                <div class="col-md-3 mb-4">
                    <div class="card h-100 shadow-sm product-card">
                        <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                            @if (!string.IsNullOrEmpty(product.Hinh))
                            {
                                <img src="~/images/@product.Hinh" alt="@product.TenHH" class="img-fluid" style="max-height: 180px; object-fit: cover;" />
                            }
                            else
                            {
                                <div class="text-center p-4">
                                    <i class="bi bi-image" style="font-size: 3rem; color: #ccc;"></i>
                                    <p class="text-muted small mt-2">Không có hình ảnh</p>
                                </div>
                            }
                        </div>
                        
                        <div class="card-body">
                            <span class="badge bg-secondary mb-2">@product.Loai?.TenLoai</span>
                            
                            <h5 class="card-title" style="height: 50px; overflow: hidden;">@product.TenHH</h5>
                            
                            <p class="card-text text-muted small" style="height: 40px; overflow: hidden;">
                                @(string.IsNullOrEmpty(product.MoTa) ? "Sản phẩm chất lượng cao" : product.MoTa)
                            </p>
                            
                            <div class="mb-2">
                                @if (product.GiamGia > 0)
                                {
                                    <span class="badge bg-danger">-@discountPercent.ToString("0")%</span>
                                    <div>
                                        <strong class="text-danger h5">@finalPrice.ToString("#,##0") đ</strong>
                                        <small class="text-muted"><del>@product.DonGia.ToString("#,##0") đ</del></small>
                                    </div>
                                }
                                else
                                {
                                    <strong class="text-primary h5">@product.DonGia.ToString("#,##0") đ</strong>
                                }
                            </div>
                            
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <small class="text-muted">
                                    <i class="bi bi-eye"></i> @product.SoLanXem lượt xem
                                </small>
                                <small class="@(product.SoLuongTon > 0 ? "text-success" : "text-danger")">
                                    @(product.SoLuongTon > 0 ? $"Còn {product.SoLuongTon}" : "Hết hàng")
                                </small>
                            </div>
                        </div>
                        
                        <div class="card-footer bg-white border-0">
                            <button class="btn btn-primary w-100" onclick="addToCart(@product.MaHH, '@product.TenHH', @finalPrice)">
                                <i class="bi bi-cart-plus"></i> Thêm vào giỏ
                            </button>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-md-12 text-center py-5">
                <i class="bi bi-inbox" style="font-size: 4rem; color: #ccc;"></i>
                <h3 class="mt-3 text-muted">Chưa có sản phẩm</h3>
                <p class="text-muted">Hãy quay lại sau hoặc chọn danh mục khác</p>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Shopping cart logic
        function addToCart(productId, productName, price) {
            let cart = JSON.parse(localStorage.getItem('cart') || '[]');
            
            // Check if product already in cart
            let existingItem = cart.find(item => item.maHH === productId);
            
            if (existingItem) {
                existingItem.soLuong += 1;
            } else {
                cart.push({
                    maHH: productId,
                    tenHH: productName,
                    donGia: price,
                    soLuong: 1
                });
            }
            
            localStorage.setItem('cart', JSON.stringify(cart));
            
            // Show notification
            alert(`✓ Đã thêm "${productName}" vào giỏ hàng!`);
            
            // Update cart count in navbar (if you have one)
            updateCartCount();
        }
        
        function updateCartCount() {
            let cart = JSON.parse(localStorage.getItem('cart') || '[]');
            let totalItems = cart.reduce((sum, item) => sum + item.soLuong, 0);
            
            // Update badge if exists
            let badge = document.querySelector('.cart-badge');
            if (badge) {
                badge.textContent = totalItems;
            }
        }
        
        // Update cart count on page load
        document.addEventListener('DOMContentLoaded', updateCartCount);
    </script>
}

<style>
    .product-card {
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    }
    
    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 15px rgba(0,0,0,0.2) !important;
    }
</style>
